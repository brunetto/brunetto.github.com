<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>for future reference... (Python)</title><link>./</link><description></description><atom:link href="categories/python.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Fri, 12 Dec 2014 12:08:48 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python plot examples</title><link>posts/python-plot-examples.html</link><description>&lt;div&gt;&lt;p&gt;Two examples on how to make plots with &lt;a href="http://home.gna.org/veusz"&gt;Veusz&lt;/a&gt; and 
&lt;a href="http://matplotlib.org"&gt;Matplotlib&lt;/a&gt;.  &lt;br&gt;
I prefer Veusz because it's easier to configure, modify and it produces 
perfect &lt;code&gt;pdf&lt;/code&gt; plots, but sometimes Matplotlib it's faster for producing just 
a draft plot to inspect data!&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="posts/python-plot-examples.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Python</category><category>plot</category><category>veusz</category><category>matplotlib</category><guid>posts/python-plot-examples.html</guid><pubDate>Mon, 29 Sep 2014 15:07:54 GMT</pubDate></item><item><title>Check external ip</title><link>posts/check-external-ip.html</link><description>&lt;div&gt;&lt;p&gt;This is the first attempt to check the external ip of a linux box. 
This means, for example, the public ip address of our modem if we are connected
to the home Wi-Fi.  &lt;br&gt;
I will try to do this in Python and Go. Of course these are raw attempts.&lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="posts/check-external-ip.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>go</category><category>golang</category><category>Python</category><category>netword</category><category>ip</category><guid>posts/check-external-ip.html</guid><pubDate>Tue, 03 Sep 2013 16:59:56 GMT</pubDate></item><item><title>Second Pelican attempt: creating a blog on GitHub with Pelican</title><link>posts/second-pelican-attempt-creating-a-blog-on-github-with-pelican.html</link><description>&lt;div&gt;&lt;h3&gt;How to create a blog with GitHub and Pelican (Python)&lt;/h3&gt;
&lt;h5&gt;Suppose that you are curios about GitHub pages... but I don't understand their guide.&lt;/h5&gt;
&lt;h5&gt;And suppose that you don't like Ruby but prefer Python...&lt;/h5&gt;
&lt;p&gt;First of all create a repo named &lt;code&gt;youname.github.com&lt;/code&gt; on your GitHub account 
(ok, maybe, before this, you have to create a GitHub account!).  &lt;br&gt;
&lt;/p&gt;&lt;p class="more"&gt;&lt;a href="posts/second-pelican-attempt-creating-a-blog-on-github-with-pelican.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>blogging</category><category>Python</category><category>Pelikan</category><guid>posts/second-pelican-attempt-creating-a-blog-on-github-with-pelican.html</guid><pubDate>Fri, 08 Mar 2013 00:00:00 GMT</pubDate></item><item><title>Latex together with matplotlib!</title><link>posts/latex-together-with-matplotlib.html</link><description>&lt;div&gt;&lt;p&gt;Sometimes you need to label your plot with math expression or Greek letters and ASCII is not enough.  &lt;br&gt;
Everything you need is to add to your script    &lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;matplotlib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;rc&lt;/span&gt;
&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'font'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'family'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s"&gt;'sans-serif'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;'sans-serif'&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="s"&gt;'Helvetica'&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt;
&lt;span class="c"&gt;## for Palatino and other serif fonts use:&lt;/span&gt;
&lt;span class="c"&gt;#rc('font',**{'family':'serif','serif':['Palatino']))&lt;/span&gt;
&lt;span class="n"&gt;rc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'text'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;usetex&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and write you text label like    &lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="n"&gt;label&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;r'theoretical $f(nu)$'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Latex</category><category>matplotlib</category><category>Python</category><category>plot</category><category>imported</category><guid>posts/latex-together-with-matplotlib.html</guid><pubDate>Fri, 01 Jun 2012 00:00:00 GMT</pubDate></item><item><title>Essential guide to binning</title><link>posts/essential-guide-to-binning.html</link><description>&lt;div&gt;&lt;p&gt;Often I found myself fighting against data binning, trying to understand the relation between linear and logarithmic bins and how to create the bin starting from the bins number or the bins spacing.  &lt;br&gt;
It's time to write down some consideration and snippet!    &lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="posts/essential-guide-to-binning.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>binning</category><category>PhD</category><category>Python</category><category>histogram</category><category>imported</category><guid>posts/essential-guide-to-binning.html</guid><pubDate>Fri, 25 May 2012 00:00:00 GMT</pubDate></item><item><title>HDF5 in Python: PyTables</title><link>posts/hdf5-in-python-pytables.html</link><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://www.hdfgroup.org/HDF5/" target="_blank" title="HDF5 Group homepage"&gt;HDF5&lt;/a&gt; is a wonderful file format you can use to put into tons of data with easy, without the need to think about endianess, binary formats and so on.  &lt;br&gt;
Pytables is an extremely optimized library built on top of HDF5 capabilities to make even simpler the use of this type of file.  &lt;br&gt;
It's also possible to navigate into a file graphically with &lt;a href="http://vitables.org/" target="_blank" title="ViTables homepage"&gt;ViTables&lt;/a&gt;.  &lt;br&gt;
Here I would like to present some of the features I use more often.  &lt;br&gt;
&lt;/p&gt;&lt;p class="more"&gt;&lt;a href="posts/hdf5-in-python-pytables.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>Python</category><category>HDF5</category><category>storage</category><category>PyTables</category><category>imported</category><guid>posts/hdf5-in-python-pytables.html</guid><pubDate>Fri, 25 May 2012 00:00:00 GMT</pubDate></item><item><title>Create, recreate and remove duplicates in array manipulation, obviously in Python!:)</title><link>posts/create-recreate-and-remove-duplicates-in-array-manipulation-obviously-in-python.html</link><description>&lt;div&gt;&lt;p&gt;I would like to "pin" here a pair of quick solution to everyday problems I encounter manipulating arrays.    &lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="posts/create-recreate-and-remove-duplicates-in-array-manipulation-obviously-in-python.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>array</category><category>code</category><category>PhD</category><category>PyTables</category><category>Python</category><category>imported</category><guid>posts/create-recreate-and-remove-duplicates-in-array-manipulation-obviously-in-python.html</guid><pubDate>Mon, 14 May 2012 00:00:00 GMT</pubDate></item><item><title>Parameter space parallel exploration in Python</title><link>posts/parameter-space-parallel-exploration-in-python.html</link><description>&lt;div&gt;&lt;p&gt;Today a friend of mine ask me how to quickly and easily parallelize a parameter space exploration in his code. "Quickly and easily" means "do not try to use &lt;a href="http://www.brunettoziosi.eu/blog/wordpress/phd-question-3-monte-carlo-markov-chain/" target="_blank" title="PhD question #3: Monte Carlo Markov chain"&gt;MCMC&lt;/a&gt; or something similar!!!".     &lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="posts/parameter-space-parallel-exploration-in-python.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>astro/physics</category><category>parallel</category><category>parameter</category><category>PhD</category><category>Python</category><category>imported</category><guid>posts/parameter-space-parallel-exploration-in-python.html</guid><pubDate>Thu, 03 May 2012 00:00:00 GMT</pubDate></item><item><title>The "initial condition" saga</title><link>posts/the-initial-condition-saga.html</link><description>&lt;div&gt;&lt;p&gt;If reading the previous posts on N-body simulations you have though that initial conditions are a little and easy task, you were wrong! And me with you!  &lt;br&gt;
The first things I have understood banging against them were:    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Gadget requires initial conditions (ICs) generate by (for example) N-GenIC&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;N-GenIC requires an initial power spectrum from CMBFast that is no longer used&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CMBeasy should substitute CMBFast but it doesn't, it only works for CMB anisotropies&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CAMB should substitute CMBFast&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the &lt;a href="http://lambda.gsfc.nasa.gov/toolbox/tb_camb_form.cfm" target="_blank" title="CAMB online interface"&gt;CAMB interface&lt;/a&gt; is terrible and not very documentated&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p class="more"&gt;&lt;a href="posts/the-initial-condition-saga.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>astro/physics</category><category>CAMB</category><category>Cosmology</category><category>gadget</category><category>ICs</category><category>initial conditions</category><category>N-GenIC</category><category>PhD</category><category>power spectrum</category><category>Python</category><category>spectrum</category><category>imported</category><guid>posts/the-initial-condition-saga.html</guid><pubDate>Tue, 31 Jan 2012 00:00:00 GMT</pubDate></item><item><title>GIF2 files Python reader</title><link>posts/gif2-files-python-reader.html</link><description>&lt;div&gt;&lt;p&gt;I create this script on the basis of the code to read the Millennium II data (the same used &lt;a href="http://elbrunz.wordpress.com/2011/12/02/from-binaries-to-hdf5-using-python/" title="From binaries to HDF5 using Python"&gt;here&lt;/a&gt;) provided by &lt;a href="http://mbk.ps.uci.edu/index.html" title="Mike Boylan-Kolchin"&gt;Mike Boylan-Kolchin&lt;/a&gt;. Being allowed to read the Fortran code to write and read the GIF2 files I could adapt this script to exactly fit this problem.    &lt;/p&gt;
&lt;p class="more"&gt;&lt;a href="posts/gif2-files-python-reader.html"&gt;Read more…&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>astro/physics</category><category>Cosmology</category><category>Master Thesis</category><category>millennium</category><category>N-body</category><category>Python</category><category>simulation</category><category>imported</category><guid>posts/gif2-files-python-reader.html</guid><pubDate>Tue, 06 Dec 2011 00:00:00 GMT</pubDate></item></channel></rss>