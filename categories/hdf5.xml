<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>for future reference... (HDF5)</title><link>.</link><description></description><atom:link href="categories/hdf5.xml" type="application/rss+xml" rel="self"></atom:link><language>en</language><lastBuildDate>Thu, 14 May 2015 17:19:42 GMT</lastBuildDate><generator>Nikola &lt;http://getnikola.com/&gt;</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>HDF5 in Python: PyTables</title><link>posts/hdf5-in-python-pytables.html</link><description>&lt;div&gt;&lt;p&gt;&lt;a href="http://www.hdfgroup.org/HDF5/" target="_blank" title="HDF5 Group homepage"&gt;HDF5&lt;/a&gt; is a wonderful file format you can use to put into tons of data with easy, without the need to think about endianess, binary formats and so on.  &lt;br&gt;
Pytables is an extremely optimized library built on top of HDF5 capabilities to make even simpler the use of this type of file.  &lt;br&gt;
It's also possible to navigate into a file graphically with &lt;a href="http://vitables.org/" target="_blank" title="ViTables homepage"&gt;ViTables&lt;/a&gt;.  &lt;br&gt;
Here I would like to present some of the features I use more often.  &lt;br&gt;
&lt;/p&gt;&lt;p class="more"&gt;&lt;a href="posts/hdf5-in-python-pytables.html"&gt;Read moreâ€¦&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>code</category><category>Python</category><category>HDF5</category><category>storage</category><category>PyTables</category><category>imported</category><guid>posts/hdf5-in-python-pytables.html</guid><pubDate>Fri, 25 May 2012 00:00:00 GMT</pubDate></item></channel></rss>