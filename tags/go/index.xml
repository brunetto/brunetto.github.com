<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Post It!</title>
    <link>http://brunettoziosi.com/tags/go/</link>
    <description>Recent content in Go on Post It!</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Dec 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://brunettoziosi.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Padding</title>
      <link>http://brunettoziosi.com/posts/padding/</link>
      <pubDate>Fri, 12 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://brunettoziosi.com/posts/padding/</guid>
      <description>Ok, it&amp;rsquo;s the n-th time I search how to pad numbers in bash.
I&amp;rsquo;ll take a note here:
i=5 printf &amp;quot;%03d\n&amp;quot; $i 005  Something similar in Python and Go:
t = &amp;quot;test-&amp;quot; t.ljust(10, &#39;0&#39;) # rjust for right padding &#39;test-00000&#39;  // LeftPad returns the string padded filling remaining left spaces to `length` with `pad`. import &amp;quot;log&amp;quot; import &amp;quot;strings&amp;quot; func LeftPad(str, pad string, length int) string { var repeat int if (length-len(str))%len(pad) !</description>
    </item>
    
    <item>
      <title>Best Golang installation</title>
      <link>http://brunettoziosi.com/posts/best-golang-installation/</link>
      <pubDate>Thu, 19 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://brunettoziosi.com/posts/best-golang-installation/</guid>
      <description>Best way to install Golang, from:
 http://blog.labix.org/2013/06/15/in-flight-deb-packages-of-go http://dave.cheney.net/2012/09/08/an-introduction-to-cross-compilation-with-go  Assuming you already have the correct environment and you are on an ubuntu workstation.
 Download and install godeb if you haven&amp;rsquo;t already done. Then with godeb list and godeb install  install your favourite Go version (the last, obviously!:P). To be able to cross-compile with the new installed Go:  sudo -i cd /usr/local/go/src git clone git://github.com/davecheney/golang-crosscompile.git source golang-crosscompile/crosscompile.bash go-crosscompile-build-all  done.</description>
    </item>
    
    <item>
      <title>Super-basic file parsing in Go</title>
      <link>http://brunettoziosi.com/posts/super-basic-file-parsing-in-go/</link>
      <pubDate>Thu, 05 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://brunettoziosi.com/posts/super-basic-file-parsing-in-go/</guid>
      <description>&lt;p&gt;I want to parse all the files in a folder starting with a certain prefix
searching for the lines containing a certain string.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Check external ip</title>
      <link>http://brunettoziosi.com/posts/check-external-ip/</link>
      <pubDate>Tue, 03 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://brunettoziosi.com/posts/check-external-ip/</guid>
      <description>&lt;p&gt;This is the first attempt to check the external ip of a linux box.
This means, for example, the public ip address of our modem if we are connected
to the home Wi-Fi.&lt;br /&gt;
I will try to do this in Python and Go. Of course these are raw attempts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; new version &lt;a href=&#34;https://github.com/brunetto/fip&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go installation from source</title>
      <link>http://brunettoziosi.com/posts/cosmological-simulations-4-moving-the-particles/</link>
      <pubDate>Fri, 30 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://brunettoziosi.com/posts/cosmological-simulations-4-moving-the-particles/</guid>
      <description>Summary of the Go installation instruction from source as presented in:
 Go installation Go installation from source Write Go code   The installation path will be /usr/local/go and the workspace in $HOME/Code/go
cd /usr/local hg clone -u release https://code.google.com/p/go cd go/src ./all.bash echo &amp;quot;export PATH=$PATH:/usr/local/go/bin&amp;quot; &amp;gt;&amp;gt; $HOME/.bashrc echo &amp;quot;export GOPATH=$HOME/Code/go/&amp;quot; &amp;gt;&amp;gt; $HOME/.bashrc  </description>
    </item>
    
    <item>
      <title>Go(lang) references</title>
      <link>http://brunettoziosi.com/pages/tech/golang-references/</link>
      <pubDate>Wed, 21 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://brunettoziosi.com/pages/tech/golang-references/</guid>
      <description>Go installation from source Regex Tutorial Cookbook Tutorial 2 Examples http://golang.org/ http://golangtutorials.blogspot.it/2011/05/table-of-contents.html http://www.golang-book.com/ Why it was creates https://groups.google.com/forum/#!forum/golang-nuts https://code.google.com/p/golem/ https://github.com/gonum https://plus.google.com/+golang/posts https://plus.google.com/communities/115354877257015196825 Progress bar Advanced logging Zen Slide What Python developers need to know before migrating to Go(lang) Why Iâ€™m not leaving Python for Go Golang for Python programmers Go for Pythonistas Go by example Going Go The Go Programming Language, or: Why all C-like languages except one suck.</description>
    </item>
    
  </channel>
</rss>